# Environment variables that the bot may use
NAME: Português
LANGUAGE_CODE: pt
TIMEZONE: America/Sao_Paulo

# the back button on many menus
back: «

executed_cmd: |-
    Comando executado

settings_text: |-
    🛠 <b>Configurações do UserLixo</b>

language: |-
    🌎 Idioma
choose_language: |-
    🌎 Escolha seu idioma:
language_chosen: |-
    ✅ Idioma configurado!

sudoers: |-
    🛂 Sudoers

env_vars: |-
    ⚙ Config vars

help_text: |-
    ❔ <b>Ajuda</b>

about_userlixo: |-
    ℹ️ Sobre o UserLixo

commands: |-
    📒 Comandos

plugins: |-
    🖇 Plugins

chat: |-
    👥 Grupo

channel: |-
    📢 Canal

setting_sudoers_text: |-
    🛂 <b>Sudoers</b>
    - Sudoers do userbot podem fazer... tudo (inclusive adicionar e remover outros sudoers).
    - Abaixo estão listados os atuais sudoers do userbot (incluindo você e o próprio userbot). Pelo teclado inline você pode remover (🗑) e adicionar (➕) novos sudoers.

add_sudoer: |-
    ➕ Adicionar sudoer

add_sudoer_ask: |-
    💬 Me envie o username ou id do usuário que deseja registrar como sudoer.

add_sudoer_not_match: |-
    ❕ A sua mensagem contém caracteres não permitidos para usernames e ids... Verifique se está tudo correto, envie /add_sudoer e tente novamente.

sudoer_added: |-
    ✅ Sudoer registrado
settings_env_text: |-
    ⚙ <b>Config vars</b>

edit_env_text: |-
    📝 Config var "<code>{key}</code>"
    👁‍🗨 Valor: "<code>{value}</code>"
    
    Para editar, envie o novo valor neste chat.
about_userlixo_text: |-
    ℹ️ UserLixo é um userbot feito por diversão pela @AmanoTeam u.u

    ⚙ Esta é a branch <code>userlixo-czp</code>, que ainda está em desenvolvimento. Ela pode conter bugs, então por gentileza reporte-os para o @usernein.
edit_env_text_restart: |-
    📝 Config var "<code>{key}</code>"
    👁‍🗨 Valor: "<code>{value}</code>"
    
    ❗️ <b>Esta configuração requer o reinício do UserLixo após editada.</b>

restart_now: |-
    🔄 Reiniciar agora

restarting_now_alert: |-
    🔄 O UserLixo está sendo reiniciado. Isso deve durar entre 3 a 7 segundos. Caso dure mais, verifique a saída do terminal.

upgrading_now_alert: |-
    🔄 O UserLixo está sendo atualizado. Isso deve durar entre 3 a 7 segundos. Caso dure mais, verifique a saída do terminal.

restarted_alert: |-
    ✅ UserLixo reiniciado. Duração do reinício: <code>{seconds}</code> segundos.
    
    🏷 <b>Commit</b>: <code>{title}</code> (<code>{rev}</code>)
    🗓 <b>Data:</b> <code>{date}</code>
upgraded_alert: |-
    🆕 UserLixo atualizado! Duração do reinício: <code>{seconds}</code> segundos.
    
    🏷 <b>Commit</b>: <code>{title}</code> (<code>{rev}</code>)
    🗓 <b>Data:</b> <code>{date}</code>

upgrade_error_not_git: |-
    😕 Para atualizar o UserLixo é preciso estar o executando em um repositório git local.
    Clone o repositório com <code>git clone https://github.com/AmanoTeam/UserLixo -b userlixo-czp</code> e refaça o login.

upgrade_alert_already_uptodate: |-
    ☑️ O UserLixo já está na versão mais recente, não há nada para atualizar.
    
    🏷 <b>Commit</b>: <code>{title}</code> (<code>{rev}</code>)
    🗓 <b>Data:</b> <code>{date}</code>

upgrade_failed: |-
    ❌ O upgrade falhou com o código de retorno <code>{code}</code> para a branch <code>{branch}</code>
    <code>{output}</code>
upgrade: |-
    ⏬ Atualizar

restart: |-
    🔄 Reiniciar

help: |-
    ❔ Ajuda

settings: |-
    ⚙ Configurações

start_text: |-
    👾 Hey! Eu sou seu bot assistente pessoal do UserLixo. No que está interessado?
commands_text: |-
    📒 Lista de comandos

command_info: |-
    📒 Comando <code>{command}</code>
    {info}


cmd_info_upgrade: |-
    Atualiza para o commit mais recente do userlixo-czp no GitHub e reinicia.

cmd_info_restart: |-
    Renicia o processo, carregando todas as alterações.

cmd_info_eval: |-
    Edita a mensagem com o resultado de uma expressão em Python. Este comando tem um alias 'ev' que responde à mensagem em vez de editar.
    
    Variáveis disponíveis:
    <code>c</code> - objeto Client
    <code>m</code> - objeto Message
    <code>reply</code> - o objeto Message da mensagem respondida ou None
    <code>user</code> - se a mensagem for uma resposta, <code>user</code> será o objeto User do usuário respondido. Senão, será o objeto User de quem enviou o comando.
    <code>chat</code> - atalho para <code>m.chat</code>

cmd_info_exec: |-
    Executa um código Python e edita a mensagem com o retorno. Este comando tem um alias 'ex' que responde à mensagem em vez de editar.
    
    Variáveis disponíveis:
    <code>c</code> - objeto Client
    <code>m</code> - objeto Message
    <code>reply</code> - o objeto Message da mensagem respondida ou None
    <code>user</code> - se a mensagem for uma resposta, <code>user</code> será o objeto User do usuário respondido. Senão, será o objeto User de quem enviou o comando.
    <code>chat</code> - atalho para <code>m.chat</code>

cmd_info_cmd: |-
    Executa um comando shell NO SERVIDOR. O que é feito aqui é real e não pode ser desfeito pelo UserLixo.

cmd_info_ping: |-
    Nós todos não sabemos o que isto faz? Este comando envia um "Pong" informando quanto tempo uma requisição à API levou.

cmd_info_help: |-
    Mostra alguns botões com algumas informações que podem ser úteis para você.

cmd_info_settings: |-
    Exibe as configurações. ALgumas configurações só podem ser alteradas no privado do bot assistente.
checking_packages_updates: |-
    🔎 Procurando atualizações dos requerimentos...

upgrade_pip_continue: |-
    📦 Atualizar pacotes e continuar

upgrade_not_pip: |-
    ➡️ Continuar sem atualizar pacotes

cancel: |-
    ✖️ Cancelar

ask_upgrade_pip_pkgs: |-
    📦 Alguns dos pacotes requeridos têm atualizações disponíveis:
    {upgradable}
    
    O que deseja fazer?

upgrading_pip_packages: |-
    📦 Atualizando requerimentos...

upgrade_canceled: |-
    ✖️ Upgrade cancelado.